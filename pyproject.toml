[tool.poetry]
name = "infom227_animations"
version = "0.1.0"
description = ""
authors = ["Berg Lucas <55436804+BergLucas@users.noreply.github.com>"]
readme = "README.md"
packages = [{ include = "*" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
manim = "^0.18.1"
manim-dataflow-analysis = { git = "https://github.com/BergLucas/manim-dataflow-analysis" }
antlr4-python3-runtime = "^4.13.2"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.4.1"
coverage = "^7.2.7"
ruff = "^0.6.4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test = "python -m unittest -v"
coverage = "coverage run -m unittest -v"
coverage-report = ["coverage", { cmd = "coverage report" }]
coverage-html = ["coverage", { cmd = "coverage html" }]
mypy = "mypy ."
black = "black ."
ruff = "ruff check ."
ruff-fix = "ruff check --fix ."
ruff-ufix = "ruff check --fix --unsafe-fixes ."
lint = ["black", "ruff", "mypy"]
build-small-visitor = "antlr4 -Dlanguage=Python3 -visitor -no-listener -o small/cst small/SmallGrammar.g4"

[tool.coverage.run]
relative_files = true
branch = true
source = [".", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "N",   # pep8-naming
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "TCH", # flake8-type-checking
    "Q",   # flake8-quotes
    "PL",  # pylint
]

ignore = [
    "E203",
    "N818",
    "C901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "F403",
    "F405",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
